import 'package:json_annotation/json_annotation.dart';

part 'task.g.dart';

enum TaskStatus { pending, inProgress, completed }

class Subtask {
  final String title;
  final bool isCompleted;

  Subtask({required this.title, this.isCompleted = false});

  Map<String, dynamic> toJson() => {
    'title': title,
    'isCompleted': isCompleted,
  };

  factory Subtask.fromJson(Map<String, dynamic> json) => Subtask(
    title: json['title'] as String,
    isCompleted: json['isCompleted'] as bool,
  );
}

@JsonSerializable(explicitToJson: true)
class TaskData {
  final int? id; // Generated by SQLite
  final String title;
  final DateTime completionDate;
  final TaskStatus status;
  final String description;
  final List<Map<String, dynamic>> assignees;
  final List<Subtask>? subtasks;

  TaskData({
    this.id,
    required this.title,
    required this.completionDate,
    required this.status,
    required this.description,
    required this.assignees,
     this.subtasks,
  });

  factory TaskData.fromJson(Map<String, dynamic> json) => _$TaskDataFromJson(json);

  Map<String, dynamic> toJson() => _$TaskDataToJson(this);

  TaskData copyWith({
    int? id,
    String? title,
    DateTime? completionDate,
    TaskStatus? status,
    String? description,
    List<Map<String, dynamic>>? assignees,
    List<Subtask>? subtasks,
  }) {
    return TaskData(
      id: id ?? this.id,
      title: title ?? this.title,
      completionDate: completionDate ?? this.completionDate,
      status: status ?? this.status,
      description: description ?? this.description,
      assignees: assignees ?? this.assignees,
      subtasks: subtasks ?? this.subtasks,
    );
  }
}

generateJson() {
  // Run this command in your terminal to generate the JSON serialization code:
  // flutter pub run build_runner build --delete-conflicting-outputs
}